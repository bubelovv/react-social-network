{"version":3,"file":"static/js/834.034acbe3.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileUserInfo/AboutUserInfo/ProfileSocialLinks/ProfileSocialLinks.jsx","components/Profile/ProfileInfo/ProfileUserInfo/AboutUserInfo/AboutUserInfo.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileUserInfo/AboutUserForm/AboutUserForm.module.css?123a","components/Profile/ProfileInfo/ProfileUserInfo/AboutUserForm/AboutUserForm.jsx","components/Profile/ProfileInfo/ProfileUserInfo/ProfileUserInfo.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../redux/auth-selectors\";\r\n\r\nconst mapStateToProps = (state) => ({ isAuth: getIsAuth(state) })\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Navigate to={'/login'}></Navigate>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__8nrv4\",\"wallpaper\":\"ProfileInfo_wallpaper__kQYMj\",\"aboutMe\":\"ProfileInfo_aboutMe__rijlA\",\"profilePhoto\":\"ProfileInfo_profilePhoto__rvv-O\",\"profileInfoWrap\":\"ProfileInfo_profileInfoWrap__djq8-\",\"customInputFile\":\"ProfileInfo_customInputFile__DHNQf\",\"aboutMeInfo\":\"ProfileInfo_aboutMeInfo__yb6JB\",\"myInfo\":\"ProfileInfo_myInfo__NwLRc\",\"myInfoRed\":\"ProfileInfo_myInfoRed__xqUQ5\",\"socialIcons\":\"ProfileInfo_socialIcons__fklsI\",\"link\":\"ProfileInfo_link__vw8lF\",\"statusWrap\":\"ProfileInfo_statusWrap__inXoj\",\"statusSpanWrap\":\"ProfileInfo_statusSpanWrap__WTSPe\",\"statusInputWrap\":\"ProfileInfo_statusInputWrap__-IHYk\",\"btnChange\":\"ProfileInfo_btnChange__n7AuL\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from '../ProfileInfo.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMade = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMade = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const changeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    return (\r\n        <div className={s.statusWrap}>\r\n            {editMode ?\r\n                <div className={s.statusInputWrap}>\r\n                    <span>Status:</span>\r\n                    <input autoFocus={true}\r\n                           onChange={changeStatus}\r\n                           onBlur={deactivateEditMade}\r\n                           value={status}/>\r\n                </div> :\r\n                <div className={s.statusSpanWrap}>\r\n                    <span>\r\n                        Status: {status || 'Enter your status'}\r\n                    </span>\r\n                    {props.isOwner && (\r\n                        <div style={{flex: '0 0 70px'}}>\r\n                            <button className={s.btnChange} onClick={activateEditMade}>change status</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from '../../../ProfileInfo.module.css';\r\nimport facebook from \"../../../../../../assets/images/fb.png\";\r\nimport vk from \"../../../../../../assets/images/vk.png\";\r\nimport twitter from \"../../../../../../assets/images/twitter.png\";\r\nimport instagram from \"../../../../../../assets/images/inst.png\";\r\nimport github from \"../../../../../../assets/images/git.png\";\r\nimport avatar from \"../../../../../../assets/images/avatar.jpg\";\r\n\r\nconst ProfileSocialLinks = ({contacts}) => {\r\n    const socialIcons = {facebook, vk, twitter, instagram, github}\r\n\r\n    const contactsList = Object.keys(contacts).map(contact => {\r\n        {\r\n            return contacts[contact] && (\r\n                <a href={contacts[contact]} key={contact} className={s.link}>\r\n                    <img src={socialIcons[contact] || avatar} alt={''}/>\r\n                </a>\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={s.socialIcons}>\r\n            {contactsList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSocialLinks;","import React from 'react';\r\nimport s from \"../../ProfileInfo.module.css\";\r\nimport ProfileSocialLinks from \"./ProfileSocialLinks/ProfileSocialLinks\";\r\n\r\nconst AboutUserInfo = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={s.aboutMeInfo}>\r\n            <div className={s.myInfo}>\r\n                Name: {profile.fullName}\r\n            </div>\r\n\r\n            <div className={profile.aboutMe ? s.myInfo : s.myInfoRed}>\r\n                About me: {profile.aboutMe || ' i\\'m very secretive'}\r\n            </div>\r\n\r\n            <div className={profile.lookingForAJob ? s.myInfo : s.myInfoRed}>\r\n                Looking for a job: {profile.lookingForAJob ? ' yes' : ' no'}\r\n            </div>\r\n\r\n            <div className={profile.lookingForAJobDescription ? s.myInfo : s.myInfoRed}>\r\n                My skills: {profile.lookingForAJobDescription || 'I\\'m not looking for a job'}\r\n            </div>\r\n\r\n            <ProfileSocialLinks contacts={profile.contacts}/>\r\n\r\n            {isOwner && (\r\n                <div style={{flex: '0 0 70px'}}>\r\n                    <button className={s.btnChange}\r\n                            onClick={() => goToEditMode(true)}>change user info\r\n                    </button>\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutUserInfo;","// extracted by mini-css-extract-plugin\nexport default {\"userForm\":\"AboutUserForm_userForm__073lJ\",\"userInfoBlocks\":\"AboutUserForm_userInfoBlocks__n5x3e\",\"contactName\":\"AboutUserForm_contactName__ckUuv\",\"userInfoBlock\":\"AboutUserForm_userInfoBlock__X0n4x\",\"checkBox\":\"AboutUserForm_checkBox__mxBd7\",\"btnChange\":\"AboutUserForm_btnChange__0Q0yU\"};","import React from 'react';\r\nimport s from \"./AboutUserForm.module.css\";\r\nimport {useForm} from 'react-hook-form';\r\n\r\nconst AboutUserForm = ({profile, isOwner, goToEditMode, saveInfo}) => {\r\n    let {\r\n        register,\r\n        handleSubmit,\r\n        setError,\r\n        clearErrors,\r\n        formState: {errors, isValid, touchedFields},\r\n        reset,\r\n    } = useForm({\r\n        defaultValues: profile,\r\n    });\r\n\r\n    let onSubmit = (formData, setError) => {    // ---------------- REFACTOR ---------------\r\n\r\n        saveInfo(formData, setError)\r\n            .then(() => {\r\n                goToEditMode(false)\r\n            })\r\n    };\r\n\r\n    return (\r\n        <form className={s.userForm}\r\n              onSubmit={handleSubmit((data) => onSubmit(data, setError))}>\r\n\r\n            <div className={s.userInfoBlocks}>\r\n                <div className={s.userInfoBlock}>\r\n                    <div>Full name:</div>\r\n                    <input\r\n                        {...register('fullName', {\r\n                            required: 'This field is required',\r\n                            minLength: 3,\r\n                        })}\r\n                    />\r\n                </div>\r\n                <div className={s.userInfoBlock}>\r\n                    <div></div>\r\n                    <span>Looking for a job:</span>\r\n                    <input className={s.checkBox} type={'checkbox'} {...register('lookingForAJob')}/>\r\n                </div>\r\n                <div className={s.userInfoBlock}>\r\n                    <div>My skills:</div>\r\n                    <textarea\r\n                        {...register('lookingForAJobDescription', {\r\n                            required: 'This field is required',\r\n                            minLength: 3,\r\n                        })}\r\n                    />\r\n                </div>\r\n                <div className={s.userInfoBlock}>\r\n                    <div>About me:</div>\r\n                    <textarea\r\n                        {...register('aboutMe', {\r\n                            required: 'This field is required',\r\n                            minLength: 3,\r\n                        })}\r\n                    />\r\n                </div>\r\n                <div>CONTACTS:</div>\r\n                {Object.keys(profile.contacts).map(contact => {\r\n                    return (\r\n                        <div key={contact} className={s.userInfoBlock}>\r\n                            <div className={s.contactName}>{contact}:</div>\r\n                            <input onClick={() => clearErrors(contact)}\r\n                                   {...register('contacts.' + contact)}/>\r\n\r\n                            {errors[contact] && (\r\n                                <div style={{color: 'red'}}>\r\n                                    {errors[contact].message || 'Errors'}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            {isOwner && (\r\n                <>\r\n                    <div className={s.btnChange}>\r\n                        <button type=\"submit\">save user's information</button>\r\n                    </div>\r\n                    <div className={s.btnChange}>\r\n                        <button onClick={() => goToEditMode(false)}>X close change area X</button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AboutUserForm;","import React, {useState} from \"react\";\r\nimport s from '../ProfileInfo.module.css';\r\nimport avatar from \"../../../../assets/images/avatar.jpg\";\r\nimport AboutUserInfo from \"./AboutUserInfo/AboutUserInfo\";\r\nimport AboutUserForm from \"./AboutUserForm/AboutUserForm\";\r\n\r\nconst ProfileUserInfo = ({profile, isOwner, savePhoto, saveInfo}) => {\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    return (\r\n        <div className={s.aboutMe}>\r\n\r\n            <div className={s.profilePhoto}>\r\n                <img src={profile.photos.large || avatar} alt='bgc'/>\r\n\r\n                {isOwner && (\r\n                    <label htmlFor=\"file-upload\" className={s.customInputFile}>\r\n                        Change Photo\r\n                        <input hidden id=\"file-upload\" type={\"file\"} onChange={mainPhotoSelected}/>\r\n                    </label>\r\n                )}\r\n            </div>\r\n\r\n            <div className={s.profileInfoWrap}>\r\n                {editMode\r\n                    ? <AboutUserForm profile={profile}\r\n                                     isOwner={isOwner}\r\n                                     goToEditMode={setEditMode}\r\n                                     saveInfo={saveInfo}/>\r\n                    : <AboutUserInfo profile={profile}\r\n                                     isOwner={isOwner}\r\n                                     goToEditMode={setEditMode}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileUserInfo;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Users/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport ProfileUserInfo from \"./ProfileUserInfo/ProfileUserInfo\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveInfo}) => {\r\n    return (\r\n        profile === null ? <Preloader/> :\r\n            <div className={s.profileInfo}>\r\n                {/*<div className={s.wallpaper}>*/}\r\n                {/*    <img src=\"https://wallpaperaccess.com/full/2397971.jpg\" alt='bgc'/>*/}\r\n                {/*</div>*/}\r\n\r\n                <ProfileUserInfo profile={profile}\r\n                                 status={status}\r\n                                 isOwner={isOwner}\r\n                                 savePhoto={savePhoto}\r\n                                 saveInfo={saveInfo}/>\r\n\r\n                <ProfileStatusWithHooks isOwner={isOwner}\r\n                                        status={status}\r\n                                        updateStatus={updateStatus}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__NbCjo\",\"like\":\"Post_like__49zTZ\",\"dislike\":\"Post_dislike__0AaBI\",\"count\":\"Post_count__StFbG\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    let onIncrementLikes = () => {\r\n        props.incrementLikes(props.id);\r\n    };\r\n\r\n    let onDecrementLikes = () => {\r\n        props.decrementLikes(props.id);\r\n    };\r\n\r\n    return (\r\n        <div className={s.post}>\r\n            <img src='https://pixelbox.ru/wp-content/uploads/2021/05/ava-vk-animal-91.jpg' alt=\"cat\"/>\r\n            <span>{props.message}</span>\r\n            <span className={s.count}>{props.count}</span>\r\n            <button onClick={onDecrementLikes} className={s.dislike}> dislike</button>\r\n            <button onClick={onIncrementLikes} className={s.like}> like</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__WAVd5\",\"add\":\"MyPosts_add__iA0SX\",\"textarea\":\"MyPosts_textarea__2smd8\",\"textareaInvalid\":\"MyPosts_textareaInvalid__TckFy\",\"textareaValid\":\"MyPosts_textareaValid__b4BWF\",\"errorText\":\"MyPosts_errorText__kOy8y\"};","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport cn from \"classnames\";\r\n\r\nconst NewPostForm = ({addPost}) => {\r\n\tlet {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { errors, isValid, touchedFields },\r\n\t\treset,\r\n\t} = useForm({ mode: 'onBlur' });\r\n\r\n\tlet onSubmit = (data) => {\r\n\t\taddPost(data.newPostText);\r\n\t\treset();\r\n\t};\r\n\r\n\tconst textareaCls = cn(s.textarea, {[s.textareaValid]: touchedFields.newPostText && isValid})\r\n\r\n\treturn (\r\n\t\t<form className={s.add} onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<h4 style={{color: \"#000\"}}>New post:</h4>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={textareaCls}\r\n\t\t\t\t\tplaceholder=\"Enter your post...\"\r\n\t\t\t\t\t{...register('newPostText', {\r\n\t\t\t\t\t\trequired: 'This field is required',\r\n\t\t\t\t\t\tminLength: {\r\n\t\t\t\t\t\t\tvalue: 3,\r\n\t\t\t\t\t\t\tmessage: 'Minimum length is 3',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.errorText}>\r\n\t\t\t\t{errors?.newPostText && <p>{errors?.newPostText?.message || 'Error!'}</p>}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button disabled={!isValid}>Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default NewPostForm;\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport NewPostForm from \"./NewPostForm\";\r\n\r\nconst MyPosts = props => {\r\n    let postsElements = [...props.posts].reverse().map(post => (\r\n        <Post key={post.id} id={post.id} message={post.message} count={post.likesCount}\r\n              incrementLikes={props.incrementLikes}\r\n              decrementLikes={props.decrementLikes}/>\r\n        ))\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <NewPostForm newMessageText={props.newMessageText}\r\n                         addPost={props.addPost}/>\r\n            <div>\r\n                My posts:\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {\r\n    addPost,\r\n    decrementLikes,\r\n    incrementLikes,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts,\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n    incrementLikes,\r\n    decrementLikes,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n// import s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveInfo}) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status}\r\n                         updateStatus={updateStatus}\r\n                         isOwner={isOwner}\r\n                         savePhoto={savePhoto}\r\n                         saveInfo={saveInfo}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from './Profile';\r\nimport {getProfile, getStatus, saveInfo, savePhoto, updateStatus} from '../../redux/profileReducer';\r\nimport {useParams} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\r\nimport {getIsAuth} from \"../../redux/auth-selectors\";\r\n\r\nfunction ProfileContainer(props) {\r\n    let params = useParams();\r\n    let userId = params.userId;\r\n    if (!userId) {\r\n        userId = props.authorisedUserId; //create redirect with helps JSX-Component and react-hooks\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.getProfile(userId);\r\n        props.getStatus(userId);\r\n    }, [params])\r\n\r\n    return (\r\n        <Profile\r\n            isOwner={userId === props.authorisedUserId}\r\n            profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n            savePhoto={props.savePhoto}\r\n            saveInfo={props.saveInfo}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorisedUserId: state.auth.id,\r\n        isAuth: getIsAuth(state),\r\n    };\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveInfo}),\r\n    withAuthRedirect,\r\n)(ProfileContainer);\r\n"],"names":["mapStateToProps","state","isAuth","getIsAuth","Component","connect","props","to","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","isOwner","style","flex","onClick","contacts","socialIcons","facebook","vk","twitter","instagram","github","contactsList","Object","keys","map","contact","href","src","avatar","alt","profile","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","saveInfo","useForm","defaultValues","register","handleSubmit","setError","clearErrors","formState","errors","isValid","touchedFields","reset","onSubmit","data","formData","then","required","minLength","type","color","message","savePhoto","photos","large","htmlFor","hidden","id","target","files","length","Preloader","ProfileStatusWithHooks","count","decrementLikes","incrementLikes","addPost","mode","textareaCls","cn","newPostText","placeholder","disabled","postsElements","posts","reverse","post","likesCount","newMessageText","profilePage","MyPosts","compose","authorisedUserId","auth","getProfile","getStatus","withAuthRedirect","params","useParams","userId"],"sourceRoot":""}